---
import "./styles.css";

// Datos de ejemplo para los artículos del blog
const blogPosts = [
	{
		id: 1,
		title: "Cómo optimizar tu entrenamiento de fuerza",
		excerpt:
			"Descubre las técnicas más efectivas para maximizar tus resultados en el gimnasio con estos consejos de expertos.",
		date: "10 Abril, 2025",
		author: "Carlos Mendez",
		image: "/images/trainers/trainer1.jpeg",
		tags: ["entrenamiento", "fuerza", "técnica"],
		category: "entrenamiento",
		comments: [
			{
				author: "María",
				text: "¡Excelentes consejos! Estoy aplicando la técnica de series descendentes y los resultados son increíbles.",
				avatar: "M",
			},
			{
				author: "Juan",
				text: "¿Podrían hacer un artículo sobre recuperación muscular?",
				avatar: "J",
			},
		],
	},
	{
		id: 2,
		title: "Nutrición efectiva para ganar masa muscular",
		excerpt:
			"La alimentación adecuada es tan importante como el entrenamiento. Aprende qué comer antes y después de tus rutinas.",
		date: "5 Abril, 2025",
		author: "Laura Sánchez",
		image: "/images/trainers/trainer2.jpeg",
		tags: ["nutrición", "proteínas", "dieta"],
		category: "nutrición",
		comments: [
			{
				author: "Pedro",
				text: "Las recetas con proteína vegetal me han ayudado mucho como vegetariano.",
				avatar: "P",
			},
			{
				author: "Ana",
				text: "¿Cuál es la mejor hora para consumir proteínas después del entrenamiento?",
				avatar: "A",
			},
		],
	},
	{
		id: 3,
		title: "Beneficios del entrenamiento HIIT",
		excerpt:
			"El entrenamiento por intervalos de alta intensidad puede transformar tu condición física en menos tiempo que métodos tradicionales.",
		date: "1 Abril, 2025",
		author: "Roberto González",
		image: "/images/classes/hiit.jpeg",
		tags: ["cardio", "hiit", "resistencia"],
		category: "cardio",
		comments: [
			{
				author: "Elena",
				text: "Desde que empecé con HIIT he notado mucha más energía durante el día.",
				avatar: "E",
			},
		],
	},
	{
		id: 4,
		title: "Yoga para recuperación muscular",
		excerpt:
			"Incorpora estas posturas de yoga a tu rutina para mejorar la flexibilidad y acelerar la recuperación tras entrenamientos intensos.",
		date: "28 Marzo, 2025",
		author: "Sofía Torres",
		image: "/images/classes/yoga.jpg",
		tags: ["yoga", "recuperación", "flexibilidad"],
		category: "bienestar",
		comments: [
			{
				author: "Diego",
				text: "La postura del niño es mi favorita después de día de piernas.",
				avatar: "D",
			},
			{
				author: "Lucía",
				text: "¿Recomiendan practicar yoga en ayunas o después de comer?",
				avatar: "L",
			},
		],
	},
	{
		id: 5,
		title: "Preparación mental para competiciones",
		excerpt:
			"El aspecto psicológico es tan importante como el físico. Aprende cómo preparar tu mente para dar lo mejor en cada competición.",
		date: "25 Marzo, 2025",
		author: "Javier Martínez",
		image: "/images/classes/crossfit.jpeg",
		tags: ["mental", "competición", "psicología"],
		category: "motivación",
		comments: [
			{
				author: "Carmen",
				text: "Las técnicas de visualización me han ayudado muchísimo.",
				avatar: "C",
			},
		],
	},
	{
		id: 6,
		title: "Guía completa de suplementación",
		excerpt:
			"Navegando en el complejo mundo de los suplementos: qué necesitas y qué puedes ignorar para alcanzar tus objetivos.",
		date: "20 Marzo, 2025",
		author: "Andrea López",
		image: "/images/trainers/trainer3.jpeg",
		tags: ["suplementos", "proteínas", "nutrición"],
		category: "nutrición",
		comments: [
			{
				author: "Pablo",
				text: "¿Recomiendan alguna marca específica de creatina?",
				avatar: "P",
			},
			{
				author: "Gabriela",
				text: "El artículo me aclaró muchas dudas sobre los BCAA. ¡Gracias!",
				avatar: "G",
			},
		],
	},
];

// Lista de todas las categorías y tags para los filtros
const categories = [...new Set(blogPosts.map((post) => post.category))];
const allTags = [...new Set(blogPosts.flatMap((post) => post.tags))];
---

<section class="blog-section">
	<div class="container">
		<h2 class="section-title">Nuestro Blog</h2>

		<div class="filter-controls">
			<div class="category-filters">
				<span class="filter-label">Filtrar por categoría:</span>
				<div class="filter-buttons">
					<button
						class="filter-btn active"
						data-category="all"
						>Todas</button
					>
					{
						categories.map((category) => (
							<button
								class="filter-btn"
								data-category={category}
							>
								{category.charAt(0).toUpperCase() +
									category.slice(1)}
							</button>
						))
					}
				</div>
			</div>

			<div class="tag-filters">
				<span class="filter-label">Filtrar por etiqueta:</span>
				<div class="filter-buttons">
					<button
						class="filter-btn active"
						data-tag="all"
						>Todas</button
					>
					{
						allTags.map((tag) => (
							<button
								class="filter-btn"
								data-tag={tag}
							>
								#{tag}
							</button>
						))
					}
				</div>
			</div>
		</div>

		<div class="blog-grid">
			{
				blogPosts.map((post) => (
					<article
						class="blog-card scroll-reveal"
						data-category={post.category}
						data-tags={post.tags.join(" ")}
					>
						<div class="blog-image">
							<img
								src={post.image}
								alt={post.title}
							/>
							<div class="blog-category">{post.category}</div>
						</div>

						<div class="blog-content">
							<h3 class="blog-title">{post.title}</h3>
							<div class="blog-meta">
								<span class="blog-date">{post.date}</span>
								<span class="blog-author">
									Por {post.author}
								</span>
							</div>
							<p class="blog-excerpt">{post.excerpt}</p>

							<div class="blog-tags">
								{post.tags.map((tag) => (
									<span class="tag">#{tag}</span>
								))}
							</div>

							<a
								href={`/blog/${post.id}`}
								class="read-more"
							>
								Leer más
							</a>
						</div>

						<div class="blog-comments">
							<h4 class="comments-title">
								Comentarios ({post.comments.length})
							</h4>
							<div class="comments-list">
								{post.comments.map((comment) => (
									<div class="comment">
										<div
											class="comment-avatar"
											data-initial={comment.avatar}
										/>
										<div class="comment-content">
											<div class="comment-author">
												{comment.author}
											</div>
											<div class="comment-text">
												{comment.text}
											</div>
										</div>
									</div>
								))}
							</div>
						</div>
					</article>
				))
			}
		</div>
	</div>
</section>

<script>
	// Script para habilitar el filtrado por categoría y etiqueta
	document.addEventListener("DOMContentLoaded", () => {
		const categoryButtons = document.querySelectorAll(
			".filter-btn[data-category]",
		);
		const tagButtons = document.querySelectorAll(".filter-btn[data-tag]");
		const articles = document.querySelectorAll(".blog-card");

		// Filtrado por categoría
		categoryButtons.forEach((button) => {
			button.addEventListener("click", () => {
				const category = button.getAttribute("data-category");

				// Actualizar botones activos
				categoryButtons.forEach((btn) =>
					btn.classList.remove("active"),
				);
				button.classList.add("active");

				// Filtrar artículos
				filterArticles();
			});
		});

		// Filtrado por etiqueta
		tagButtons.forEach((button) => {
			button.addEventListener("click", () => {
				const tag = button.getAttribute("data-tag");

				// Actualizar botones activos
				tagButtons.forEach((btn) => btn.classList.remove("active"));
				button.classList.add("active");

				// Filtrar artículos
				filterArticles();
			});
		});

		function filterArticles() {
			const activeCategory = document
				.querySelector(".filter-btn[data-category].active")
				.getAttribute("data-category");
			const activeTag = document
				.querySelector(".filter-btn[data-tag].active")
				.getAttribute("data-tag");

			articles.forEach((article) => {
				const articleCategory = article.getAttribute("data-category");
				const articleTags = article
					.getAttribute("data-tags")
					.split(" ");

				const matchesCategory =
					activeCategory === "all" ||
					activeCategory === articleCategory;
				const matchesTag =
					activeTag === "all" || articleTags.includes(activeTag);

				if (matchesCategory && matchesTag) {
					article.classList.remove("hidden");
				} else {
					article.classList.add("hidden");
				}
			});
		}

		// Efecto Scroll Reveal
		const scrollRevealElements =
			document.querySelectorAll(".scroll-reveal");

		const observerOptions = {
			root: null,
			rootMargin: "0px",
			threshold: 0.1,
		};

		const observer = new IntersectionObserver((entries) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					entry.target.classList.add("revealed");
					observer.unobserve(entry.target);
				}
			});
		}, observerOptions);

		scrollRevealElements.forEach((element) => {
			observer.observe(element);
		});
	});
</script>
